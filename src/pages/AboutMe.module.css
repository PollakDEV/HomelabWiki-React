/* Terminal Section */
.terminalSection {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 70%;
    height: 70vh;
    background: #333;
    border-radius: 8px;
    box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    color: #fff;
    overflow: hidden;
    transition: opacity 1s;
    z-index: 900;
}

.terminalHeader {
    padding: 10px;
    background: #2d2d2d;
    display: flex;
    align-items: center;
    border-bottom: 1px solid #1a1a1a;
}

.terminalButtons {
    display: flex;
    gap: 8px;
}

.terminalButton {
    width: 12px;
    height: 12px;
    border-radius: 50%;
}

.close { background: #ff5f56; }
.minimize { background: #ffbd2e; }
.expand { background: #27c93f; }

.terminalContent {
    padding: 20px;
    height: calc(100% - 40px);
    overflow-y: auto;
}

@keyframes blink {
    50% { opacity: 0; }
}

.hidden {
    opacity: 0;
    pointer-events: none;
}

.terminalCommand {
    color: #00ff00;
}

.terminalError {
    color: #ff4444;
}

@media (max-width: 640px) {
  .terminalSection {
    width: 90% !important;
    height: 60vh !important;
    margin-top: 20px;
  }
}

/* Content Section */
.hero {
    text-align: center;
    padding: 12rem 0.5rem;
    opacity: 0;
    animation: fadeIn 1s forwards;
    animation-delay: 0.5s;
}

@keyframes fadeIn {
    to { opacity: 1; }
}

.hero h1 {
    font-size: 4rem;
    margin-top: 100px;
    margin-bottom: 1rem;
    background: linear-gradient(to right, var(--clrSecondary), var(--clrAccent));
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

/* Skills Section */
.skillsGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    gap: 2rem;
    margin: 4rem 12rem;
}

.skillItem {
    opacity: 0;
    animation: fadeIn 1s forwards;
    animation-delay: 1s;
    text-align: center;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 10px;
    transform: translateY(20px);
    animation: skillAppear 1s forwards;
}

.skillItem:nth-child(1) { animation-delay: 0.3s; }
.skillItem:nth-child(2) { animation-delay: 0.6s; }
.skillItem:nth-child(3) { animation-delay: 0.9s; }
.skillItem:nth-child(4) { animation-delay: 1.2s; }

.skillBar {
    height: 8px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    margin: 1rem 0;
    overflow: hidden;
    position: relative;
}

.skillProgress {
    height: 100%;
    background: linear-gradient(90deg, var(--clrSecondary), var(--clrAccent));
    width: 0;
    animation: progressLoad 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
    animation-delay: 0.5s;
    position: relative;
}

.skillProgress::after {
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    bottom: 0;
    width: 2px;
    background: rgba(255, 255, 255, 0.3);
    animation: progressGlow 1.5s infinite;
}

@keyframes skillAppear {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes progressLoad {
    from { width: 0; }
    to { width: var(--targetWidth); }
}

@keyframes progressGlow {
    0%, 100% { opacity: 0.3; }
    50% { opacity: 1; }
}

@media (max-width: 768px) {
    .skillsGrid {
        grid-template-columns: 1fr;
        gap: 1rem;
        padding: 0;
        width: calc(100% - 24px);
        margin: 0 auto;
    }
}

/* Projects Section */
.projectsSection {
    max-width: 1200px;
    margin: 6rem auto;
    padding: 0 2rem;
}

.projectsSection h2 {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 4rem;
    color: var(--clrSecondary);
    position: relative;
}

.projectsSection h2::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background: var(--clrAccent);
}

.projectGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 3rem;
    position: relative;
}

.projectCard {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    overflow: hidden;
    position: relative;
    transition: transform 0.3s ease;
}

.cardHover {
    position: absolute;
    inset: 0;
    background: radial-gradient(600px circle at var(--x) var(--y), rgba(0, 159, 253, 0.1), transparent 40%);
    opacity: 0;
    transition: opacity 0.3s ease;
}

.projectCard:hover .cardHover {
    opacity: 1;
}

.previewContainer {
    position: relative;
    overflow: hidden;
    height: 250px;
}

.projectPreview {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.projectCard:hover .projectPreview {
    transform: scale(1.05);
}

.projectInfo {
    padding: 0 1.5rem 1.5rem 1.5rem;
}

.techStack {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    margin: 1rem 0;
}

.techTag {
    background: rgba(0, 159, 253, 0.1);
    color: var(--clrSecondary);
    padding: 0.3rem 0.8rem;
    border-radius: 20px;
    font-size: 0.8rem;
    transition: all 0.3s ease;
}

.techTag:hover {
    transform: translateY(-2px);
    background: var(--clrSecondary);
    color: var(--dark);
}

.projectLinks {
    display: flex;
    justify-content: space-between;
    margin-top: 1.5rem;
}

.linkButton {
    position: relative;
    padding: 0.6rem 1.5rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 500;
    overflow: hidden;
    transition: all 0.3s ease;
}

.linkButton.demo {
    background: linear-gradient(45deg, var(--clrSecondary), var(--clrAccent));
    color: white;
}

.linkTrail {
    position: absolute;
    background: rgba(255, 255, 255, 0.2);
    width: 50px;
    height: 100%;
    left: -60px;
    top: 0;
    transform: skewX(-30deg);
    transition: left 0.3s ease;
}

.linkButton:hover .linkTrail {
    left: 110%;
}

.projectCard {
    --x: 0;
    --y: 0;
}

.projectCard:hover {
    transform: translateY(-5px);
}

@media (max-width: 768px) {
    .projectGrid {
        grid-template-columns: 1fr;
    }
}

/* Contact Section */
.contactSection {
    max-width: 1200px;
    margin: 6rem auto;
    padding: 0 2rem;
}

.contactSection h2 {
    text-align: center;
    font-size: 2.5rem;
    margin-bottom: 4rem;
    color: var(--clrSecondary);
    position: relative;
}

.contactSection h2::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 2px;
    background: var(--clrAccent);
}

.contactGrid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 3rem;
}

.contactCard {
    padding: 2rem;
    background: rgba(255, 255, 255, 0.03);
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
    overflow: hidden;
}

.contactCard:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 159, 253, 0.1);
}

.cardIcon {
    width: 50px;
    height: 50px;
    background: rgba(0, 159, 253, 0.1);
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1.5rem;
}

.cardIcon svg {
    color: var(--clrSecondary);
}

.contactCard h3 {
    color: var(--clrSecondary);
    margin-bottom: 0.5rem;
}

.contactCard p {
    color: rgba(255, 255, 255, 0.7);
    font-size: 0.9rem;
    margin-bottom: 1.5rem;
}

.cardLink {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--clrAccent);
    text-decoration: none;
    font-weight: 500;
    transition: gap 0.3s ease;
}

.cardLink span {
    transition: transform 0.3s ease;
}

.cardLink:hover {
    gap: 1rem;
}

.cardLink:hover span {
    transform: rotate(45deg);
}

.contactForm {
    padding: 2rem;
    background: rgba(255, 255, 255, 0.02);
    border-radius: 12px;
    border: 1px solid rgba(255, 255, 255, 0.1);
}

.formGroup {
    position: relative;
    margin-bottom: 2rem;
}

.formGroup input,
.formGroup textarea {
    width: 100%;
    padding: 1rem 0;
    border: none;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
    background: transparent;
    color: white;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.formGroup label {
    position: absolute;
    left: 0;
    top: 1rem;
    color: rgba(255, 255, 255, 0.6);
    pointer-events: none;
    transition: all 0.3s ease;
}

.formGroup input:focus,
.formGroup textarea:focus,
.formGroup input:valid,
.formGroup textarea:valid {
    outline: none;
    border-bottom-color: var(--clrAccent);
}

.formGroup input:focus ~ label,
.formGroup textarea:focus ~ label,
.formGroup input:valid ~ label,
.formGroup textarea:valid ~ label {
    transform: translateY(-1.5rem);
    font-size: 0.8rem;
    color: var(--clrAccent);
}

.glowButton {
    position: relative;
    background: linear-gradient(45deg, var(--clrSecondary), var(--clrAccent));
    color: white;
    border: none;
    padding: 1rem 2rem;
    border-radius: 8px;
    cursor: pointer;
    overflow: hidden;
    width: 100%;
    font-weight: 500;
    transition: transform 0.3s ease;
}

.buttonPulse {
    position: absolute;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.1);
    top: 0;
    left: -100%;
    transition: left 0.3s ease;
}

.glowButton:hover {
    transform: translateY(-2px);
}

.glowButton:hover .buttonPulse {
    left: 100%;
}

@media (max-width: 768px) {
    .contactGrid {
        grid-template-columns: 1fr;
    }
}